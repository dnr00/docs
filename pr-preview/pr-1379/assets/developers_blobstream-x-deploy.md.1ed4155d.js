import{_ as e,o,c as t,Q as a}from"./chunks/framework.7e48ea92.js";const b=JSON.parse('{"title":"Non-canonical Blobstream X deployments","description":"","frontmatter":{"head":[["meta",{"name":"og:title","content":"Non-canonical Blobstream X deployments | Celestia Docs"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"developers/blobstream-x-deploy.md","filePath":"developers/blobstream-x-deploy.md","lastUpdated":1706840990000}'),n={name:"developers/blobstream-x-deploy.md"},s=a(`<h1 id="non-canonical-blobstream-x-deployments" tabindex="-1">Non-canonical Blobstream X deployments <a class="header-anchor" href="#non-canonical-blobstream-x-deployments" aria-label="Permalink to &quot;Non-canonical Blobstream X deployments&quot;">â€‹</a></h1><p>If you want to deploy Blobstream X to a new chain, where a canonical Succinct Gateway contract does not exist, you need to do the following.</p><ol><li><p>Deploy a new <code>SuccinctGateway</code> contract to the new chain.</p><ol><li><p><code>git clone https://github.com/succinctlabs/succinctx</code></p></li><li><p><code>cd contracts</code></p></li><li><p>Fill in <code>contracts/.env</code><a href="https://github.com/succinctlabs/succinctx/blob/main/contracts/.env.example" target="_blank" rel="noreferrer">following <code>.env.example</code></a>. - Example <code>.env</code></p><pre><code>    \`\`\`bash
    PRIVATE_KEY=
    WALLET_TYPE=PRIVATE_KEY
    UPGRADE_VIA_EOA=true

    CREATE2_SALT=0x04

    # Sepolia testnet
    TIMELOCK_11155111=0xDEd0000E32f8F40414d3ab3a830f735a3553E18e
    GUARDIAN_11155111=0xDEd0000E32f8F40414d3ab3a830f735a3553E18e

    RPC_11155111=https://ethereum-sepolia.publicnode.com
    ETHERSCAN_API_KEY_11155111=S26KHEB7PVMD65DAU36P4TB16F6EQ4R5BU
    \`\`\`
</code></pre></li><li><p>Deploy the <code>SuccinctGateway</code> contract.</p><p>Ex. Deploying <code>SuccinctGateway</code> on Sepolia</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">./script/deploy.sh</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;SuccinctGateway&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;11155111&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">./script/verify.sh</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;SuccinctGateway&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;11155111&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;true&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">./script/deploy.sh</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;SuccinctGateway&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;11155111&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">./script/verify.sh</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;SuccinctGateway&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;11155111&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;true&quot;</span></span></code></pre></div></li></ol></li><li><p>Register the function IDs on the <code>SuccinctGateway</code> contract.</p><ol><li><p>Download the <code>FunctionVerifier.sol</code> of the <a href="https://alpha.succinct.xyz/celestia/blobstreamx/releases/6" target="_blank" rel="noreferrer">nextHeader</a> circuit and the <a href="https://alpha.succinct.xyz/celestia/blobstreamx/releases/7" target="_blank" rel="noreferrer">headerRange</a> circuit from the <code>Build Files</code> section of the release page on the Succinct Platform.</p><pre><code>![Untitled](/img/blobstream/blobstream_x_succint.png)
</code></pre></li><li><p>Deploy both <code>FunctionVerifier.sol</code> contracts to the new chain. Keep track of the addresses.</p></li><li><p>(TODO) <code>cast</code> command to register the <code>functionId</code>&#39;s with the deployed <code>SuccinctGateway</code>. 1. Pass the addresses from the previous step in as arguments.</p></li></ol></li><li><p>Deploy a <code>BlobstreamX</code> contract to the new chain. <a href="https://github.com/succinctlabs/blobstreamx?tab=readme-ov-file#deploy-blobstream-x-contract" target="_blank" rel="noreferrer">Follow the guide</a>.</p></li><li><p>Set up a local <code>BlobstreamX</code> operator to locally prove &amp; relay to the new chain. <a href="https://github.com/succinctlabs/blobstreamx?tab=readme-ov-file#local-proving--relaying" target="_blank" rel="noreferrer">Follow the guide</a>. - Run the operator, and it should post proofs to the new <code>BlobstreamX</code> contract!</p></li></ol>`,3),c=[s];function l(r,p,i,d,h,u){return o(),t("div",null,c)}const m=e(n,[["render",l]]);export{b as __pageData,m as default};
