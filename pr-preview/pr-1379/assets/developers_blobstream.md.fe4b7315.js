import{_ as e,o as t,c as a,Q as o}from"./chunks/framework.7e48ea92.js";const r="/pr-preview/pr-1379/img/blobstream/blobstream_logo.png",i="/pr-preview/pr-1379/img/blobstream/blobstream_x.png",g=JSON.parse('{"title":"Blobstream: Streaming modular DA to Ethereum","description":"Learn how to integrate your L2 with Blobstream","frontmatter":{"description":"Learn how to integrate your L2 with Blobstream","head":[["meta",{"name":"og:title","content":"Blobstream: Streaming modular DA to Ethereum | Celestia Docs"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"developers/blobstream.md","filePath":"developers/blobstream.md","lastUpdated":1706828872000}'),s={name:"developers/blobstream.md"},l=o('<h1 id="blobstream-streaming-modular-da-to-ethereum" tabindex="-1">Blobstream: Streaming modular DA to Ethereum <a class="header-anchor" href="#blobstream-streaming-modular-da-to-ethereum" aria-label="Permalink to &quot;Blobstream: Streaming modular DA to Ethereum&quot;">​</a></h1><p><img src="'+r+'" alt="Blobstream logo"></p><p><a href="https://blog.celestia.org/introducing-blobstream/" target="_blank" rel="noreferrer">Blobstream</a> is the first data availability solution for Ethereum that securely scales with the number of users. Formerly known as the <a href="https://blog.celestia.org/celestiums/" target="_blank" rel="noreferrer">Quantum Gravity Bridge (QGB)</a>, Blobstream relays commitments to Celestia&#39;s data root to an onchain light client on Ethereum, for integration by developers into L2 contracts. This enables Ethereum developers to build high-throughput L2s using Celestia&#39;s optimised DA layer, the first with Data Availability Sampling (DAS).</p><p>A new and improved version of Blobstream, BlobstreamX, is out and will replace Blobstream. This latter proves Celestia block headers on the target EVM chain using zk-proofs which allows inheriting all the security guarantees of Celestia.</p><h2 id="blobstream-x" tabindex="-1">Blobstream X <a class="header-anchor" href="#blobstream-x" aria-label="Permalink to &quot;Blobstream X&quot;">​</a></h2><p><img src="'+i+'" alt="blobstream x"></p><p>BlobstreamX is a ZK light client that bridges Celestia’s modular DA layer to Ethereum to allow high-throughput rollups to use Celestia’s DA while settling on Ethereum.</p><p>Optimistic or ZK rollups that settle on Ethereum but wish to use Celestia for DA require a mechanism for <em>bridging</em> Celestia’s data root to Ethereum as part of the settlement process. This data root is used during validity proofs to prove that particular rollup transactions were included and made available in the Celestia network.</p><p>Bridging Celestia’s data root to Ethereum requires running a Celestia <em>light client</em> as a smart contract on Ethereum, to make the latest state of the Celestia chain known on Ethereum and available to rollups. Blobstream X utilizes the latest advances in zero-knowledge proofs to generate a <em>succinct proof</em> that enough Celestia validators have come to consensus (according to the Tendermint consensus protocol) on a block header, and verifies this proof in the Blobstream X Ethereum smart contract to update it with the latest Celestia header.</p><p>The Blobstream X zero-knowledge proof not only verifies the consensus of Celestia validators, but it also merkelizes and hashes all the data roots in the block range from the previous update to the current update, making accessible all Celestia data roots (verifiable with a Merkle inclusion proof against the stored Merkle root) to rollups.</p><p>TODO: GRAPHIC HERE</p><p>Blobstream X is built and deployed with <a href="https://succinct.xyz/" target="_blank" rel="noreferrer">Succinct’s unified proving stack</a>.</p><h2 id="integrate-with-blobstreamx" tabindex="-1">Integrate with BlobstreamX <a class="header-anchor" href="#integrate-with-blobstreamx" aria-label="Permalink to &quot;Integrate with BlobstreamX&quot;">​</a></h2><p>The following docs go over how developers can integrate BlobstreamX.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>TBD</p><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>If the contract is still not deployed, then it needs to be deployed before it is used by the prover/relayer. See the <a href="./">deployment documentation (TBD)</a> for more details.</p></div><h2 id="how-blobstreamx-works" tabindex="-1">How BlobstreamX works <a class="header-anchor" href="#how-blobstreamx-works" aria-label="Permalink to &quot;How BlobstreamX works&quot;">​</a></h2><p>TBD</p><h2 id="how-to-integrate" tabindex="-1">How to integrate <a class="header-anchor" href="#how-to-integrate" aria-label="Permalink to &quot;How to integrate&quot;">​</a></h2><p>Integrating your L2 with BlobstreamX requires two components: your onchain smart contract logic, and your offchain client logic. The next three sections cover these topics:</p><ul><li><a href="./blobstreamx-contracts">Integrate with BlobstreamX contracts</a></li><li><a href="./blobstreamx-offchain">Integrate with BlobstreamX client</a></li><li><a href="./blobstreamx-proof-queries">Querying the BlobstreamX proofs</a></li></ul><h3 id="deployed-contracts" tabindex="-1">Deployed contracts <a class="header-anchor" href="#deployed-contracts" aria-label="Permalink to &quot;Deployed contracts&quot;">​</a></h3><p>You can interact with the Blobstream X contracts today on testnet. The Blobstream X Solidity smart contracts are currently deployed on the following Ethereum testnets:</p><table><thead><tr><th>Contract</th><th>EVM network</th><th>Contract address</th><th>Attested data</th></tr></thead><tbody><tr><td>Blobstream</td><td>Sepolia</td><td><a href="https://sepolia.etherscan.io/address/0x3a5cbB6EF4756DA0b3f6DAE7aB6430fD8c46d247" target="_blank" rel="noreferrer"><code>0x3a5cbB6EF4756DA0b3f6DAE7aB6430fD8c46d247</code></a></td><td>Mocha testnet</td></tr><tr><td>Blobstream</td><td>Arbitrum Sepolia</td><td><a href="https://sepolia.arbiscan.io/address/0x040769edbca5218e616c8eb16e4faea49ced5e33" target="_blank" rel="noreferrer"><code>0x040769edbca5218e616c8eb16e4faea49ced5e33</code></a></td><td>Mocha testnet</td></tr><tr><td>Blobstream X</td><td>Goerli</td><td><a href="https://goerli.etherscan.io/address/0x67ea962864cdad3f2202118dc6f65ff510f7bb4d" target="_blank" rel="noreferrer"><code>0x67ea962864cdad3f2202118dc6f65ff510f7bb4d</code></a></td><td>Mocha testnet</td></tr></tbody></table><p>TBD (Add: Sepolia, Arbitrum Sepolia, and eventually the others).</p><h2 id="blobstreamx-vs-data-availability-committees-dacs" tabindex="-1">BlobstreamX vs. data availability committees (DACs) <a class="header-anchor" href="#blobstreamx-vs-data-availability-committees-dacs" aria-label="Permalink to &quot;BlobstreamX vs. data availability committees (DACs)&quot;">​</a></h2><h3 id="decentralization-and-security" tabindex="-1">Decentralization and security <a class="header-anchor" href="#decentralization-and-security" aria-label="Permalink to &quot;Decentralization and security&quot;">​</a></h3><p>BlobstreamX is built on Celestia, which uses a CometBFT-based proof-of-stake system. BlobstreamX shares the same security assumptions as Celestia. In contrast, data availability committees (DACs), are typically centralized or semi-centralized, relying on a specific set of entities or individuals to vouch for data availability.</p><h3 id="mechanism-of-verification" tabindex="-1">Mechanism of verification <a class="header-anchor" href="#mechanism-of-verification" aria-label="Permalink to &quot;Mechanism of verification&quot;">​</a></h3><p>BlobstreamX uses data availability attestations, which are Merkle roots of the batched L2 data, to confirm that the necessary data is present on Celestia. The L2 contract on Ethereum can check directly with BlobstreamX if the data is published on Celestia. Similarly, a DAC would rely on attestations or confirmations from its permissioned members.</p><h3 id="flexibility-and-scalability" tabindex="-1">Flexibility and scalability <a class="header-anchor" href="#flexibility-and-scalability" aria-label="Permalink to &quot;Flexibility and scalability&quot;">​</a></h3><p>BlobstreamX is designed to offer high-throughput data availability for Ethereum L2s, aiming to strike a balance between scalability and security. It operates independently of Ethereum&#39;s gas costs, as Celestia&#39;s resource pricing is more byte-focused rather than computation-centric. On the other hand, the scalability and flexibility of a DAC would depend on its specific design and implementation.</p><p>In summary, both BlobstreamX and DACs aim to ensure offchain data availability, but BlobstreamX offers a more decentralized, secure, and scalable solution compared to the potential centralized nature of DACs.</p>',34),n=[l];function d(h,c,m,b,u,p){return t(),a("div",null,n)}const y=e(s,[["render",d]]);export{g as __pageData,y as default};
